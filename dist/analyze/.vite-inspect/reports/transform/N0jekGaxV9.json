{
  "resolvedId": "/Users/antondidenko/Downloads/nuxt-3-sdk-demo-9opbku/pages/[...slug].vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup>\nimport { useAsyncData } from '#imports'\nimport { ref } from 'vue'\nconst list = ref(null)\nconst url = 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/Ysera';\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': '10da99b8c8msh61f495aa235ccb2p1da90cjsnda0f95bacd23',\n    'X-RapidAPI-Host': 'omgvamp-hearthstone-v1.p.rapidapi.com'\n  }\n};\n\nconst { data, error } = await useAsyncData(() => {\n  return $fetch(url, options)\n})\n\nif (data.value) {\n  list.value = data.value\n}\n\nif (error.value?.response?.status === 404) {\n  throw createError({ statusCode: 404 })\n}\n</script>\n\n<template>\n  <NuxtPwaManifest />\n\n  <h1>{{ list[0].artist }}</h1>\n  <img :src=\"list[0].img\" :alt=\"list[0].artist\">\n</template>\n\n<style lang=\"css\">\nbody {\n  border: 5px solid darkgray;\n  background: lightgoldenrodyellow;\n}\n\nh1 {\n  font-family: \"Courier New\";\n  font-size: 30px;\n  text-align: center;\n  margin-bottom: 40px;\n}\n\nimg {\n  width: 300px;\n  padding: 20px;\n  display: block;\n  border: 3px solid darkred;\n  margin: 0 auto 50px;\n  background: wheat;\n}\n</style>\n",
      "start": 1710516948076,
      "end": 1710516948214,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710516948214,
      "end": 1710516948214,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\", \"alt\"]\n\nimport { useAsyncData } from '#imports'\nimport { ref } from 'vue'\nconst url = 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/Ysera';\n\nconst _sfc_main = {\n  __name: '[...slug]',\n  async setup(__props) {\n\nlet __temp, __restore\n\nconst list = ref(null)\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': '10da99b8c8msh61f495aa235ccb2p1da90cjsnda0f95bacd23',\n    'X-RapidAPI-Host': 'omgvamp-hearthstone-v1.p.rapidapi.com'\n  }\n};\n\nconst { data, error } = (\n  ([__temp,__restore] = _withAsyncContext(() => useAsyncData(() => {\n  return $fetch(url, options)\n}))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n)\n\nif (data.value) {\n  list.value = data.value\n}\n\nif (error.value?.response?.status === 404) {\n  throw createError({ statusCode: 404 })\n}\n\nreturn (_ctx, _cache) => {\n  const _component_NuxtPwaManifest = _resolveComponent(\"NuxtPwaManifest\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NuxtPwaManifest),\n    _createElementVNode(\"h1\", null, _toDisplayString(list.value[0].artist), 1),\n    _createElementVNode(\"img\", {\n      src: list.value[0].img,\n      alt: list.value[0].artist\n    }, null, 8, _hoisted_1)\n  ], 64))\n}\n}\n\n}\n\n\nimport \"/Users/antondidenko/Downloads/nuxt-3-sdk-demo-9opbku/pages/[...slug].vue?vue&type=style&index=0&lang.css\"\n\nexport default _sfc_main",
      "start": 1710516948214,
      "end": 1710516948218,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710516948218,
      "end": 1710516948218,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useAsyncData } from '#app/composables/asyncData';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\", \"alt\"]\n\nimport { ref } from 'vue'\nconst url = 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/Ysera';\n\nconst _sfc_main = {\n  __name: '[...slug]',\n  async setup(__props) {\n\nlet __temp, __restore\n\nconst list = ref(null)\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': '10da99b8c8msh61f495aa235ccb2p1da90cjsnda0f95bacd23',\n    'X-RapidAPI-Host': 'omgvamp-hearthstone-v1.p.rapidapi.com'\n  }\n};\n\nconst { data, error } = (\n  ([__temp,__restore] = _withAsyncContext(() => useAsyncData(() => {\n  return $fetch(url, options)\n}))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n)\n\nif (data.value) {\n  list.value = data.value\n}\n\nif (error.value?.response?.status === 404) {\n  throw createError({ statusCode: 404 })\n}\n\nreturn (_ctx, _cache) => {\n  const _component_NuxtPwaManifest = _resolveComponent(\"NuxtPwaManifest\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NuxtPwaManifest),\n    _createElementVNode(\"h1\", null, _toDisplayString(list.value[0].artist), 1),\n    _createElementVNode(\"img\", {\n      src: list.value[0].img,\n      alt: list.value[0].artist\n    }, null, 8, _hoisted_1)\n  ], 64))\n}\n}\n\n}\n\n\nimport \"/Users/antondidenko/Downloads/nuxt-3-sdk-demo-9opbku/pages/[...slug].vue?vue&type=style&index=0&lang.css\"\n\nexport default _sfc_main",
      "start": 1710516948218,
      "end": 1710516948220,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "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"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1710516948220,
      "end": 1710516948220,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1710516948220,
      "end": 1710516948221,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;AAAA"
      }
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710516948221,
      "end": 1710516948221,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710516948221,
      "end": 1710516948221,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710516948221,
      "end": 1710516948221,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710516948221,
      "end": 1710516948221,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710516948221,
      "end": 1710516948221,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710516948221,
      "end": 1710516948221,
      "order": "normal"
    }
  ]
}
