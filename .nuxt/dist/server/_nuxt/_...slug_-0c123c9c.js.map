{"version":3,"file":"_...slug_-0c123c9c.js","sources":["../../../../node_modules/@vite-pwa/nuxt/dist/runtime/components/VitePwaManifest.mjs","../../../../node_modules/nuxt/dist/app/composables/asyncData.js","../../../../pages/[...slug].vue"],"sourcesContent":["import { defineComponent, ref } from \"vue\";\nimport { pwaInfo } from \"virtual:pwa-info\";\nimport { useHead } from \"#imports\";\nexport default defineComponent({\n  async setup() {\n    if (pwaInfo) {\n      const meta = ref({ link: [] });\n      useHead(meta);\n      const { webManifest } = pwaInfo;\n      if (webManifest) {\n        const { href, useCredentials } = webManifest;\n        if (useCredentials) {\n          meta.value.link.push({\n            rel: \"manifest\",\n            href,\n            crossorigin: \"use-credentials\"\n          });\n        } else {\n          meta.value.link.push({\n            rel: \"manifest\",\n            href\n          });\n        }\n      }\n    }\n    return () => null;\n  }\n});\n","import { getCurrentInstance, onBeforeMount, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, unref, watch } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { createError } from \"./error.js\";\nimport { onNuxtReady } from \"./ready.js\";\nimport { asyncDataDefaults } from \"#build/nuxt.config.mjs\";\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  let [key, handler, options = {}] = args;\n  if (typeof key !== \"string\") {\n    throw new TypeError(\"[nuxt] [asyncData] key must be a string.\");\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [asyncData] handler must be a function.\");\n  }\n  const nuxt = useNuxtApp();\n  const getDefault = () => null;\n  const getDefaultCachedData = () => nuxt.isHydrating ? nuxt.payload.data[key] : nuxt.static.data[key];\n  options.server = options.server ?? true;\n  options.default = options.default ?? getDefault;\n  options.getCachedData = options.getCachedData ?? getDefaultCachedData;\n  options.lazy = options.lazy ?? false;\n  options.immediate = options.immediate ?? true;\n  options.deep = options.deep ?? asyncDataDefaults.deep;\n  const hasCachedData = () => ![null, void 0].includes(options.getCachedData(key));\n  if (!nuxt._asyncData[key] || !options.immediate) {\n    nuxt.payload._errors[key] ??= null;\n    const _ref = options.deep ? ref : shallowRef;\n    nuxt._asyncData[key] = {\n      data: _ref(options.getCachedData(key) ?? options.default()),\n      pending: ref(!hasCachedData()),\n      error: toRef(nuxt.payload._errors, key),\n      status: ref(\"idle\")\n    };\n  }\n  const asyncData = { ...nuxt._asyncData[key] };\n  asyncData.refresh = asyncData.execute = (opts = {}) => {\n    if (nuxt._asyncDataPromises[key]) {\n      if (opts.dedupe === false) {\n        return nuxt._asyncDataPromises[key];\n      }\n      nuxt._asyncDataPromises[key].cancelled = true;\n    }\n    if ((opts._initial || nuxt.isHydrating && opts._initial !== false) && hasCachedData()) {\n      return Promise.resolve(options.getCachedData(key));\n    }\n    asyncData.pending.value = true;\n    asyncData.status.value = \"pending\";\n    const promise = new Promise(\n      (resolve, reject) => {\n        try {\n          resolve(handler(nuxt));\n        } catch (err) {\n          reject(err);\n        }\n      }\n    ).then((_result) => {\n      if (promise.cancelled) {\n        return nuxt._asyncDataPromises[key];\n      }\n      let result = _result;\n      if (options.transform) {\n        result = options.transform(_result);\n      }\n      if (options.pick) {\n        result = pick(result, options.pick);\n      }\n      nuxt.payload.data[key] = result;\n      asyncData.data.value = result;\n      asyncData.error.value = null;\n      asyncData.status.value = \"success\";\n    }).catch((error) => {\n      if (promise.cancelled) {\n        return nuxt._asyncDataPromises[key];\n      }\n      asyncData.error.value = createError(error);\n      asyncData.data.value = unref(options.default());\n      asyncData.status.value = \"error\";\n    }).finally(() => {\n      if (promise.cancelled) {\n        return;\n      }\n      asyncData.pending.value = false;\n      delete nuxt._asyncDataPromises[key];\n    });\n    nuxt._asyncDataPromises[key] = promise;\n    return nuxt._asyncDataPromises[key];\n  };\n  const initialFetch = () => asyncData.refresh({ _initial: true });\n  const fetchOnServer = options.server !== false && nuxt.payload.serverRendered;\n  if (import.meta.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxt.hook(\"app:created\", async () => {\n        await promise;\n      });\n    }\n  }\n  if (import.meta.client) {\n    const instance = getCurrentInstance();\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      if (instance) {\n        onBeforeMount(() => {\n          cbs.forEach((cb) => {\n            cb();\n          });\n          cbs.splice(0, cbs.length);\n        });\n        onUnmounted(() => cbs.splice(0, cbs.length));\n      }\n    }\n    if (fetchOnServer && nuxt.isHydrating && (asyncData.error.value || hasCachedData())) {\n      asyncData.pending.value = false;\n      asyncData.status.value = asyncData.error.value ? \"error\" : \"success\";\n    } else if (instance && (nuxt.payload.serverRendered && nuxt.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    if (options.watch) {\n      watch(options.watch, () => asyncData.refresh());\n    }\n    const off = nuxt.hook(\"app:data:refresh\", async (keys) => {\n      if (!keys || keys.includes(key)) {\n        await asyncData.refresh();\n      }\n    });\n    if (instance) {\n      onUnmounted(off);\n    }\n  }\n  const asyncDataPromise = Promise.resolve(nuxt._asyncDataPromises[key]).then(() => asyncData);\n  Object.assign(asyncDataPromise, asyncData);\n  return asyncDataPromise;\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options] = args;\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nexport function useNuxtData(key) {\n  const nuxt = useNuxtApp();\n  if (!(key in nuxt.payload.data)) {\n    nuxt.payload.data[key] = null;\n  }\n  return {\n    data: toRef(nuxt.payload.data, key)\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (import.meta.server) {\n    return Promise.resolve();\n  }\n  await new Promise((resolve) => onNuxtReady(resolve));\n  const _keys = keys ? Array.isArray(keys) ? keys : [keys] : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : Array.isArray(keys) ? keys : [keys];\n  for (const key of _keys) {\n    if (key in nuxtApp.payload.data) {\n      nuxtApp.payload.data[key] = void 0;\n    }\n    if (key in nuxtApp.payload._errors) {\n      nuxtApp.payload._errors[key] = null;\n    }\n    if (nuxtApp._asyncData[key]) {\n      nuxtApp._asyncData[key].data.value = void 0;\n      nuxtApp._asyncData[key].error.value = null;\n      nuxtApp._asyncData[key].pending.value = false;\n      nuxtApp._asyncData[key].status.value = \"idle\";\n    }\n    if (key in nuxtApp._asyncDataPromises) {\n      nuxtApp._asyncDataPromises[key] = void 0;\n    }\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\n","<script setup>\nconst list = ref(null)\nconst url = 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/Ysera';\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': '10da99b8c8msh61f495aa235ccb2p1da90cjsnda0f95bacd23',\n    'X-RapidAPI-Host': 'omgvamp-hearthstone-v1.p.rapidapi.com'\n  }\n};\n\nconst { data, error } = await useAsyncData(() => {\n  return $fetch(url, options)\n})\n\nif (data.value) {\n  list.value = data.value\n}\n\nif (error.value?.response?.status === 404) {\n  throw createError({ statusCode: 404 })\n}\n</script>\n\n<template>\n  <NuxtPwaManifest />\n\n  <h1>{{ list[0].artist }}</h1>\n  <img :src=\"list[0].img\" :alt=\"list[0].artist\">\n</template>\n\n<style lang=\"css\">\nbody {\n  border: 5px solid darkgray;\n  background: lightgoldenrodyellow;\n}\n\nh1 {\n  font-family: \"Courier New\";\n  font-size: 30px;\n  text-align: center;\n  margin-bottom: 40px;\n}\n\nimg {\n  width: 300px;\n  padding: 20px;\n  display: block;\n  border: 3px solid darkred;\n  margin: 0 auto 50px;\n  background: wheat;\n}\n</style>\n"],"names":["_withAsyncContext"],"mappings":"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","x_google_ignoreList":[0,1]}